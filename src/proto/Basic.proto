syntax = "proto3";

package api;

option go_package = "github.com/Smerom/WorldGeneratorAPI/api";


message SimulationRequest {
    oneof request {
        Grid grid = 1;
        Initialization initialization = 2;
    }
}

message GridVertex {
    // Winged Edge Data
    uint32 index = 1;
    float xCoord = 2;
    float yCoord = 3;
    float zCoord = 4;
    repeated uint32 neighbors = 5;
}

// message indented for initial loading of a game grid as it contains vertex data
//  for positioning that will not change
message Grid {
    uint32 totalVerts = 1;
    repeated GridVertex vertices = 3;
}

message Initialization {

    double waterDepth = 4; // linear volume (total height)
    uint32 seed = 5; // zero for random
}

message TimedTask {
    string name = 1;
    int64 duration = 2;
    repeated TimedTask subTasks = 3;
}

message SimulationInfo {
    repeated float elevations = 2;
    repeated float sediment = 4;
    repeated int32 plates = 5;
    repeated float speeds = 6; // plate speeds
    double age = 7;
    repeated float tempurature = 8;
    repeated float precipitation = 9;
    float sealevel = 10;
    repeated TimedTask roundTimings = 11;
}

service WorldBuilder {
    rpc GenerateWorld(stream SimulationRequest) returns (stream SimulationInfo) {};
}
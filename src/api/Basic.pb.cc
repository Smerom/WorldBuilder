// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basic.proto

#include "Basic.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Basic_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Basic_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GridVertex;
}  // namespace protobuf_Basic_2eproto
namespace api {
class GridVertexDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GridVertex>
      _instance;
} _GridVertex_default_instance_;
class GridDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Grid>
      _instance;
} _Grid_default_instance_;
class SimulationInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SimulationInfo>
      _instance;
} _SimulationInfo_default_instance_;
}  // namespace api
namespace protobuf_Basic_2eproto {
static void InitDefaultsGridVertex() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_GridVertex_default_instance_;
    new (ptr) ::api::GridVertex();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::GridVertex::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GridVertex =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGridVertex}, {}};

static void InitDefaultsGrid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Grid_default_instance_;
    new (ptr) ::api::Grid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Grid::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Grid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGrid}, {
      &protobuf_Basic_2eproto::scc_info_GridVertex.base,}};

static void InitDefaultsSimulationInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SimulationInfo_default_instance_;
    new (ptr) ::api::SimulationInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SimulationInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SimulationInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSimulationInfo}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GridVertex.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Grid.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SimulationInfo.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GridVertex, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GridVertex, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GridVertex, xcoord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GridVertex, ycoord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GridVertex, zcoord_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GridVertex, neighbors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Grid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Grid, totalverts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Grid, vertices_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, elevations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, sediment_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, plates_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, speeds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, tempurature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SimulationInfo, precipitation_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::GridVertex)},
  { 10, -1, sizeof(::api::Grid)},
  { 17, -1, sizeof(::api::SimulationInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_GridVertex_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Grid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SimulationInfo_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "Basic.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013Basic.proto\022\003api\"^\n\nGridVertex\022\r\n\005inde"
      "x\030\001 \001(\r\022\016\n\006xCoord\030\002 \001(\002\022\016\n\006yCoord\030\003 \001(\002\022"
      "\016\n\006zCoord\030\004 \001(\002\022\021\n\tneighbors\030\005 \003(\r\"=\n\004Gr"
      "id\022\022\n\ntotalVerts\030\001 \001(\r\022!\n\010vertices\030\003 \003(\013"
      "2\017.api.GridVertex\"\217\001\n\016SimulationInfo\022\022\n\n"
      "elevations\030\002 \003(\002\022\020\n\010sediment\030\004 \003(\002\022\016\n\006pl"
      "ates\030\005 \003(\005\022\016\n\006speeds\030\006 \003(\002\022\013\n\003age\030\007 \001(\001\022"
      "\023\n\013tempurature\030\010 \003(\002\022\025\n\rprecipitation\030\t "
      "\003(\0022E\n\014WorldBuilder\0225\n\rGenerateWorld\022\t.a"
      "pi.Grid\032\023.api.SimulationInfo\"\000(\0010\001b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 402);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Basic.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Basic_2eproto
namespace api {

// ===================================================================

void GridVertex::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GridVertex::kIndexFieldNumber;
const int GridVertex::kXCoordFieldNumber;
const int GridVertex::kYCoordFieldNumber;
const int GridVertex::kZCoordFieldNumber;
const int GridVertex::kNeighborsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GridVertex::GridVertex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Basic_2eproto::scc_info_GridVertex.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.GridVertex)
}
GridVertex::GridVertex(const GridVertex& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      neighbors_(from.neighbors_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&zcoord_) -
    reinterpret_cast<char*>(&index_)) + sizeof(zcoord_));
  // @@protoc_insertion_point(copy_constructor:api.GridVertex)
}

void GridVertex::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zcoord_) -
      reinterpret_cast<char*>(&index_)) + sizeof(zcoord_));
}

GridVertex::~GridVertex() {
  // @@protoc_insertion_point(destructor:api.GridVertex)
  SharedDtor();
}

void GridVertex::SharedDtor() {
}

void GridVertex::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GridVertex::descriptor() {
  ::protobuf_Basic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Basic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GridVertex& GridVertex::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Basic_2eproto::scc_info_GridVertex.base);
  return *internal_default_instance();
}


void GridVertex::Clear() {
// @@protoc_insertion_point(message_clear_start:api.GridVertex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  neighbors_.Clear();
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zcoord_) -
      reinterpret_cast<char*>(&index_)) + sizeof(zcoord_));
  _internal_metadata_.Clear();
}

bool GridVertex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.GridVertex)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float xCoord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &xcoord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float yCoord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &ycoord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float zCoord = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &zcoord_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 neighbors = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_neighbors())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_neighbors())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.GridVertex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.GridVertex)
  return false;
#undef DO_
}

void GridVertex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.GridVertex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // float xCoord = 2;
  if (this->xcoord() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->xcoord(), output);
  }

  // float yCoord = 3;
  if (this->ycoord() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->ycoord(), output);
  }

  // float zCoord = 4;
  if (this->zcoord() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->zcoord(), output);
  }

  // repeated uint32 neighbors = 5;
  if (this->neighbors_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _neighbors_cached_byte_size_));
  }
  for (int i = 0, n = this->neighbors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->neighbors(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.GridVertex)
}

::google::protobuf::uint8* GridVertex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.GridVertex)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // float xCoord = 2;
  if (this->xcoord() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->xcoord(), target);
  }

  // float yCoord = 3;
  if (this->ycoord() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->ycoord(), target);
  }

  // float zCoord = 4;
  if (this->zcoord() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->zcoord(), target);
  }

  // repeated uint32 neighbors = 5;
  if (this->neighbors_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _neighbors_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->neighbors_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.GridVertex)
  return target;
}

size_t GridVertex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.GridVertex)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 neighbors = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->neighbors_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _neighbors_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // float xCoord = 2;
  if (this->xcoord() != 0) {
    total_size += 1 + 4;
  }

  // float yCoord = 3;
  if (this->ycoord() != 0) {
    total_size += 1 + 4;
  }

  // float zCoord = 4;
  if (this->zcoord() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GridVertex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.GridVertex)
  GOOGLE_DCHECK_NE(&from, this);
  const GridVertex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GridVertex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.GridVertex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.GridVertex)
    MergeFrom(*source);
  }
}

void GridVertex::MergeFrom(const GridVertex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.GridVertex)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  neighbors_.MergeFrom(from.neighbors_);
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.xcoord() != 0) {
    set_xcoord(from.xcoord());
  }
  if (from.ycoord() != 0) {
    set_ycoord(from.ycoord());
  }
  if (from.zcoord() != 0) {
    set_zcoord(from.zcoord());
  }
}

void GridVertex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.GridVertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridVertex::CopyFrom(const GridVertex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.GridVertex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridVertex::IsInitialized() const {
  return true;
}

void GridVertex::Swap(GridVertex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GridVertex::InternalSwap(GridVertex* other) {
  using std::swap;
  neighbors_.InternalSwap(&other->neighbors_);
  swap(index_, other->index_);
  swap(xcoord_, other->xcoord_);
  swap(ycoord_, other->ycoord_);
  swap(zcoord_, other->zcoord_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GridVertex::GetMetadata() const {
  protobuf_Basic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Basic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Grid::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Grid::kTotalVertsFieldNumber;
const int Grid::kVerticesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Grid::Grid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Basic_2eproto::scc_info_Grid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Grid)
}
Grid::Grid(const Grid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vertices_(from.vertices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  totalverts_ = from.totalverts_;
  // @@protoc_insertion_point(copy_constructor:api.Grid)
}

void Grid::SharedCtor() {
  totalverts_ = 0u;
}

Grid::~Grid() {
  // @@protoc_insertion_point(destructor:api.Grid)
  SharedDtor();
}

void Grid::SharedDtor() {
}

void Grid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Grid::descriptor() {
  ::protobuf_Basic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Basic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Grid& Grid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Basic_2eproto::scc_info_Grid.base);
  return *internal_default_instance();
}


void Grid::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Grid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vertices_.Clear();
  totalverts_ = 0u;
  _internal_metadata_.Clear();
}

bool Grid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Grid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 totalVerts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totalverts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.GridVertex vertices = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_vertices()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Grid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Grid)
  return false;
#undef DO_
}

void Grid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Grid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 totalVerts = 1;
  if (this->totalverts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->totalverts(), output);
  }

  // repeated .api.GridVertex vertices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vertices_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->vertices(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Grid)
}

::google::protobuf::uint8* Grid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Grid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 totalVerts = 1;
  if (this->totalverts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->totalverts(), target);
  }

  // repeated .api.GridVertex vertices = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vertices_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->vertices(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Grid)
  return target;
}

size_t Grid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Grid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.GridVertex vertices = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->vertices_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vertices(static_cast<int>(i)));
    }
  }

  // uint32 totalVerts = 1;
  if (this->totalverts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totalverts());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Grid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Grid)
  GOOGLE_DCHECK_NE(&from, this);
  const Grid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Grid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Grid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Grid)
    MergeFrom(*source);
  }
}

void Grid::MergeFrom(const Grid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Grid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vertices_.MergeFrom(from.vertices_);
  if (from.totalverts() != 0) {
    set_totalverts(from.totalverts());
  }
}

void Grid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Grid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Grid::CopyFrom(const Grid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Grid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grid::IsInitialized() const {
  return true;
}

void Grid::Swap(Grid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Grid::InternalSwap(Grid* other) {
  using std::swap;
  CastToBase(&vertices_)->InternalSwap(CastToBase(&other->vertices_));
  swap(totalverts_, other->totalverts_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Grid::GetMetadata() const {
  protobuf_Basic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Basic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SimulationInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SimulationInfo::kElevationsFieldNumber;
const int SimulationInfo::kSedimentFieldNumber;
const int SimulationInfo::kPlatesFieldNumber;
const int SimulationInfo::kSpeedsFieldNumber;
const int SimulationInfo::kAgeFieldNumber;
const int SimulationInfo::kTempuratureFieldNumber;
const int SimulationInfo::kPrecipitationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SimulationInfo::SimulationInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_Basic_2eproto::scc_info_SimulationInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SimulationInfo)
}
SimulationInfo::SimulationInfo(const SimulationInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      elevations_(from.elevations_),
      sediment_(from.sediment_),
      plates_(from.plates_),
      speeds_(from.speeds_),
      tempurature_(from.tempurature_),
      precipitation_(from.precipitation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  age_ = from.age_;
  // @@protoc_insertion_point(copy_constructor:api.SimulationInfo)
}

void SimulationInfo::SharedCtor() {
  age_ = 0;
}

SimulationInfo::~SimulationInfo() {
  // @@protoc_insertion_point(destructor:api.SimulationInfo)
  SharedDtor();
}

void SimulationInfo::SharedDtor() {
}

void SimulationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SimulationInfo::descriptor() {
  ::protobuf_Basic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Basic_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SimulationInfo& SimulationInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_Basic_2eproto::scc_info_SimulationInfo.base);
  return *internal_default_instance();
}


void SimulationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SimulationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elevations_.Clear();
  sediment_.Clear();
  plates_.Clear();
  speeds_.Clear();
  tempurature_.Clear();
  precipitation_.Clear();
  age_ = 0;
  _internal_metadata_.Clear();
}

bool SimulationInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SimulationInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float elevations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_elevations())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_elevations())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float sediment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_sediment())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34u, input, this->mutable_sediment())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 plates = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_plates())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_plates())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float speeds = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_speeds())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 50u, input, this->mutable_speeds())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double age = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float tempurature = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_tempurature())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 66u, input, this->mutable_tempurature())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float precipitation = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_precipitation())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 74u, input, this->mutable_precipitation())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SimulationInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SimulationInfo)
  return false;
#undef DO_
}

void SimulationInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SimulationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float elevations = 2;
  if (this->elevations_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _elevations_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->elevations().data(), this->elevations_size(), output);
  }

  // repeated float sediment = 4;
  if (this->sediment_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _sediment_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->sediment().data(), this->sediment_size(), output);
  }

  // repeated int32 plates = 5;
  if (this->plates_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _plates_cached_byte_size_));
  }
  for (int i = 0, n = this->plates_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->plates(i), output);
  }

  // repeated float speeds = 6;
  if (this->speeds_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _speeds_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->speeds().data(), this->speeds_size(), output);
  }

  // double age = 7;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->age(), output);
  }

  // repeated float tempurature = 8;
  if (this->tempurature_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tempurature_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->tempurature().data(), this->tempurature_size(), output);
  }

  // repeated float precipitation = 9;
  if (this->precipitation_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _precipitation_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->precipitation().data(), this->precipitation_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SimulationInfo)
}

::google::protobuf::uint8* SimulationInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SimulationInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float elevations = 2;
  if (this->elevations_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _elevations_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->elevations_, target);
  }

  // repeated float sediment = 4;
  if (this->sediment_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _sediment_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->sediment_, target);
  }

  // repeated int32 plates = 5;
  if (this->plates_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _plates_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->plates_, target);
  }

  // repeated float speeds = 6;
  if (this->speeds_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _speeds_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->speeds_, target);
  }

  // double age = 7;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->age(), target);
  }

  // repeated float tempurature = 8;
  if (this->tempurature_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _tempurature_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->tempurature_, target);
  }

  // repeated float precipitation = 9;
  if (this->precipitation_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _precipitation_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->precipitation_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SimulationInfo)
  return target;
}

size_t SimulationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SimulationInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float elevations = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->elevations_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _elevations_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float sediment = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->sediment_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _sediment_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 plates = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->plates_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _plates_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float speeds = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->speeds_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _speeds_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float tempurature = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->tempurature_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tempurature_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float precipitation = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->precipitation_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _precipitation_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // double age = 7;
  if (this->age() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SimulationInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SimulationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const SimulationInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SimulationInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SimulationInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SimulationInfo)
    MergeFrom(*source);
  }
}

void SimulationInfo::MergeFrom(const SimulationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SimulationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elevations_.MergeFrom(from.elevations_);
  sediment_.MergeFrom(from.sediment_);
  plates_.MergeFrom(from.plates_);
  speeds_.MergeFrom(from.speeds_);
  tempurature_.MergeFrom(from.tempurature_);
  precipitation_.MergeFrom(from.precipitation_);
  if (from.age() != 0) {
    set_age(from.age());
  }
}

void SimulationInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SimulationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SimulationInfo::CopyFrom(const SimulationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SimulationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SimulationInfo::IsInitialized() const {
  return true;
}

void SimulationInfo::Swap(SimulationInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SimulationInfo::InternalSwap(SimulationInfo* other) {
  using std::swap;
  elevations_.InternalSwap(&other->elevations_);
  sediment_.InternalSwap(&other->sediment_);
  plates_.InternalSwap(&other->plates_);
  speeds_.InternalSwap(&other->speeds_);
  tempurature_.InternalSwap(&other->tempurature_);
  precipitation_.InternalSwap(&other->precipitation_);
  swap(age_, other->age_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SimulationInfo::GetMetadata() const {
  protobuf_Basic_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Basic_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::GridVertex* Arena::CreateMaybeMessage< ::api::GridVertex >(Arena* arena) {
  return Arena::CreateInternal< ::api::GridVertex >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Grid* Arena::CreateMaybeMessage< ::api::Grid >(Arena* arena) {
  return Arena::CreateInternal< ::api::Grid >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SimulationInfo* Arena::CreateMaybeMessage< ::api::SimulationInfo >(Arena* arena) {
  return Arena::CreateInternal< ::api::SimulationInfo >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
